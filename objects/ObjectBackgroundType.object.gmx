<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>300</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar posXr;
globalvar posYr;
globalvar verif;
globalvar variable_de_direction;

//show_message(mouse_x);
//show_message(mouse_y);

posXr = mouse_x;
posYr = mouse_y;

verif = true;
variable_de_direction = 1;

if (posXp == posXr &amp;&amp; posYp == posYr){
variable_de_direction = "stop";}

else{

if (posXp &lt; posXr &amp;&amp; ((posYp)-(posYr))&lt;50 &amp;&amp; ((posYp)-(posYr))&gt;-50){variable_de_direction = "droite"; verif = false;} //droite
if (posXp &gt; posXr &amp;&amp; ((posYp)-(posYr))&lt;50 &amp;&amp; ((posYp)-(posYr))&gt;-50){variable_de_direction = "gauche"; verif = false;} //gauche

if (posYp &lt; posYr &amp;&amp; ((posXp)-(posXr))&lt;50 &amp;&amp; ((posXp)-(posXr))&gt;-50){variable_de_direction = "bas"; verif = false;} //bas
if (posYp &gt; posYr &amp;&amp; ((posXp)-(posXr))&lt;50 &amp;&amp; ((posXp)-(posXr))&gt;-50){variable_de_direction = "haut"; verif = false;} //haut


if (verif==true){

if (posXp &lt; posXr &amp;&amp; posYp &gt; posYr){variable_de_direction = "DiagHautDroit";} //DiagHautDroit
if (posXp &gt; posXr &amp;&amp; posYp &lt; posYr){variable_de_direction = "DiagBasGauche";} //DiagBasGauche

if (posXp &gt; posXr &amp;&amp; posYp &gt; posYr){variable_de_direction = "DiagHautGauche";} //DiagHautGauche
if (posXp &lt; posXr &amp;&amp; posYp &lt; posYr){variable_de_direction = "DiagBasDroit";} //DiagBasDroit

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar posXp;
globalvar posYp;

posXp = mouse_x;
posYp = mouse_y;

//show_message(posXp);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
